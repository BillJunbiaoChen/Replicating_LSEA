if(final_spec=='y'){
map_limits=c(-15,15)
map_breaks=c(-10,-5,-1,-0.5,0,0.5,1,5,10)}
dtd_map = dtd %>% left_join(. , df_map, by=c("id"))
figure_change = ggplot()+
geom_sf(data=dtd_map, aes(fill=as.vector(delta_level)), linewidth =  0.025, color="black") +
scale_fill_fermenter(palette = "RdBu", direction = -1, na.value = "white", breaks=map_breaks, limits=map_limits) +
theme_void() +
labs(title = paste0(type_name)  , fill='') +
theme(legend.position = "right",  legend.direction = "vertical",
legend.text = element_text(size= 12),
legend.key.size = unit(1.25,"cm"),
legend.key.width = unit(0.5,"cm"),
legend.title = element_blank(),
plot.title = element_text(size = 14, hjust=0),
text=element_text(family="Palatino"))
if(varname=='a1'){figure_change_a1=figure_change}
if(varname=='a2'){figure_change_a2=figure_change}
if(varname=='a3'){figure_change_a3=figure_change}
if(varname=='a4'){figure_change_a4=figure_change}
if(varname=='a5'){figure_change_a5=figure_change}
if(varname=='a6'){figure_change_a6=figure_change}
}
figure = ggarrange(figure_change_a1,figure_change_a2,figure_change_a3,
figure_change_a4,figure_change_a5,figure_change_a6,
nrow=2, ncol=3, common.legend = TRUE, legend="right")
pdf(paste0(output_folder,"map_amenity_effects_pp.pdf"), width = 8.25, height = 4.5)
print(figure)
dev.off()
df = merge(df_na_level, df_wa_level, by=c('id','variable'))
df$delta_level = 100*(df$level.y-df$level.x)/df$level.x
break_lim = max(abs(quantile(df$delta_level,0.1)), abs(quantile(df$delta_level,0.9)))
map_limits = c(-break_lim,break_lim)
map_breaks = round(seq(from = -break_lim, to = break_lim, length.out = 7),0)
for(varname in c('a1','a2','a3','a4','a5','a6')){
if(varname=='a1'){type_name='Touristic Amenities'}
if(varname=='a2'){type_name='Restaurants'}
if(varname=='a3'){type_name='Bars'}
if(varname=='a4'){type_name='Food Stores'}
if(varname=='a5'){type_name='Non-food Stores'}
if(varname=='a6'){type_name='Nurseries'}
df_map = df[variable==varname,]
if(final_spec=='y'){
map_limits=c(-15,15)
map_breaks=c(-10,-5,-1,-0.5,0,0.5,1,5,10)}
dtd_map = dtd %>% left_join(. , df_map, by=c("id"))
figure_change = ggplot()+
geom_sf(data=dtd_map, aes(fill=as.vector(delta_level)), linewidth =  0.025, color="black") +
scale_fill_fermenter(palette = "RdBu", direction = -1, na.value = "white", breaks=map_breaks, limits=map_limits) +
theme_void() +
labs(title = paste0(type_name)  , fill='') +
theme(legend.position = "right",  legend.direction = "vertical",
legend.text = element_text(size= 12),
legend.key.size = unit(1.25,"cm"),
legend.key.width = unit(0.5,"cm"),
legend.title = element_blank(),
plot.title = element_text(size = 14, hjust=0),
text=element_text(family="Palatino"))
if(varname=='a1'){figure_change_a1=figure_change}
if(varname=='a2'){figure_change_a2=figure_change}
if(varname=='a3'){figure_change_a3=figure_change}
if(varname=='a4'){figure_change_a4=figure_change}
if(varname=='a5'){figure_change_a5=figure_change}
if(varname=='a6'){figure_change_a6=figure_change}
}
figure = ggarrange(figure_change_a1,figure_change_a2,figure_change_a3,
figure_change_a4,figure_change_a5,figure_change_a6,
nrow=2, ncol=3, common.legend = TRUE, legend="right")
pdf(paste0(output_folder,"map_amenity_effects_pp.pdf"), width = 8.25, height = 4.5)
print(figure)
dev.off()
dtd_map
dtd_map
print(1)
df = merge(df_na_level, df_wa_level, by=c('id','variable'))
df$delta_level = 100*(df$level.y-df$level.x)/df$level.x
library(pacman)
pacman::p_load(rstudioapi, tidyverse, broom, data.table,
readstata13, readxl, openxlsx,
lubridate,
sf,
hrbrthemes, viridis, RColorBrewer,ggplot2,latex2exp,ggpubr,ggpmisc,ggpattern,
latex2exp,extrafont,kableExtra, colorspace)
setwd(dirname(getActiveDocumentContext()$path))
rm(list=ls())
################################################################################
#### Choose specifications
#### Choose specifications
spec_list = c('152')
bootstrap_options =  c('y')
spec_folders = c(paste0('../../../data/simulation_results/python/centroid_full_results/'), paste0('../../../data/simulation_results/julia/new_estimates_new_model/'))
#### Choose final specification
final_spec = 'y'
spec_final = '152'
bootstrap_final = 'y'
for (spec_folder in spec_folders){
for(bootstrap in bootstrap_options){
for(spec in spec_list ){
if(bootstrap=='y'){
spec_gamma = paste0('B_',spec)
}else{
spec_gamma = spec }
spec_folder_eq = paste0(spec_folder,'gamma_',spec_gamma,'/equilibrium_objects/')
spec_folder_cf = paste0(spec_folder,'gamma_',spec_gamma,'/counterfactuals/')
if(final_spec=='y' & bootstrap==bootstrap_final & spec==spec_final){
output_folder = paste0('../../../output/figures/counterfactual_airbnb_entry/')
}else{
output_folder = paste0(spec_folder,'gamma_',spec_gamma,'/figures/counterfactual_airbnb_entry/')
}
###### WELFARE EFFECTS ACROSS HOUSEHOLD TYPES
#Renters
df = read.csv(paste0(spec_folder_cf,'CE_renter_pp.csv'), header = TRUE, col.names = c('Exogenous','Endogenous'))
df$type = c('Older Families','Singles','Younger Families')
df <- melt(setDT(df), id.vars = c("type"), variable.name = "spec")
dfr=df
#Homeowners
df = read.csv(paste0(spec_folder_cf,'CE_homeowner_pp.csv'), header = TRUE, col.names = c('Exogenous','Endogenous'))
df$type = c('Older Families','Singles','Younger Families')
dfh <- melt(setDT(df), id.vars = c("type"), variable.name = "spec")
#Combined
df1=dfr[type=='Younger Families',]
df2=dfh[type!='Younger Families',]
dfc = rbind(df1,df2)
figure_r = ggplot(dfr, aes(x=type, y=value, fill=spec)) +
geom_hline(yintercept=0, linetype="dashed", color = "black", linewidth=0.25)+
geom_bar(position="dodge", stat='identity', linewidth=0.4) +
labs(title = 'Renters', x='', y='CE gains (% of annual income)') +
theme_minimal() +
theme(aspect.ratio = 0.8,
legend.position = c(0.75,0.2),
legend.title = element_blank(),
legend.text = element_text(size=8),
plot.title = element_text(hjust = 0.5),
text=element_text(family="Palatino"),
panel.grid = element_blank(),
axis.line = element_line(linewidth=0.25),
axis.ticks = element_line(linewidth=0.25) ) +
scale_fill_manual(values=c("gray30", "gray60"), labels = c("Exogenous amenities", "Endogenous amenities"))
figure_h = ggplot(dfh, aes(x=type, y=value, fill=spec)) +
geom_hline(yintercept=0, linetype="dashed", color = "black", linewidth=0.25)+
geom_bar(position="dodge", stat='identity', linewidth=0.4) +
labs(title = 'Homeowners', x='', y='CE gains (% of annual income)') +
theme_minimal() +
theme(aspect.ratio = 0.8,
legend.position = c(0.75,0.2),
legend.title = element_blank(),
legend.text = element_text(size=8),
plot.title = element_text(hjust = 0.5),
text=element_text(family="Palatino"),
panel.grid = element_blank(),
axis.line = element_line(linewidth=0.25),
axis.ticks = element_line(linewidth=0.25) ) +
scale_fill_manual(values=c("gray30", "gray60"), labels = c("Exogenous amenities", "Endogenous amenities"))
figure = ggarrange(figure_r, figure_h, nrow=1, ncol=2)
pdf(paste0(output_folder,"bar_welfare_effects.pdf"), width = 7, height = 3)
print(figure)
dev.off()
figure_c = ggplot(dfc, aes(x=type, y=value, fill=spec)) +
geom_hline(yintercept=0, linetype="dashed", color = "black", linewidth=0.25)+
geom_bar(position="dodge", stat='identity', linewidth=0.4) +
labs(title = '', x='', y='CE gains (% of annual income)') +
theme_minimal() +
theme(aspect.ratio = 0.9,
legend.position = c(0.75,0.2),
legend.title = element_blank(),
legend.text = element_text(size=8),
plot.title = element_text(hjust = 0.5),
text=element_text(family="Palatino"),
panel.grid = element_blank(),
axis.line = element_line(linewidth=0.25),
axis.ticks = element_line(linewidth=0.25) ) +
scale_fill_manual(values=c("gray30", "gray60"), labels = c("Exogenous amenities", "Endogenous amenities"))
pdf(paste0(output_folder,"bar_welfare_effects_combined.pdf"), height = 3.25, width = 3.5)
print(figure_c)
dev.off()
###### EFFECTS ACROSS SPACE - RENT
#Shapefile
dtd = sf::read_sf("../../../data/shapefiles/gebied.shp")
dtd$id = dtd$gd_code
#Endogenous vs exogenous amenities
for(spec_a in c('exo','endo')){
#No Airbnb vs Airbnb
for(cf in c('no_airbnb','w_airbnb')){
#Rent
if(cf=='no_airbnb' & spec_a=='exo'){
simulation_results_rent = paste0(spec_folder_eq,'r_exo_no_airbnb.csv' ) }
if(cf=='w_airbnb' & spec_a=='exo'){
simulation_results_rent = paste0(spec_folder_eq,'r_exo.csv') }
if(cf=='no_airbnb' & spec_a=='endo'){
simulation_results_rent = paste0(spec_folder_eq,'r_endo_no_airbnb.csv') }
if(cf=='w_airbnb' & spec_a=='endo'){
simulation_results_rent = paste0(spec_folder_eq,'r_endo.csv') }
dfx = read.csv(simulation_results_rent, header = FALSE, col.names = c('r'))
dfx$id = as.character(1:22)
if(cf=='no_airbnb'){df_na = dfx}
if(cf=='w_airbnb'){df_wa = dfx}
}
df = merge(df_na, df_wa, by='id')
df$delta_level = df$r.y-df$r.x
df$delta_pp = 100*df$delta_level/df$r.x
if(spec_a=='exo'){df_r_exo=df}
if(spec_a=='endo'){df_r_endo=df}
}
dtd_exo = dtd %>% left_join(. , df_r_exo, by=c("id"))
dtd_endo = dtd %>% left_join(. , df_r_endo, by=c("id"))
max_break = max(max(dtd_exo$delta_pp),max(dtd_endo$delta_pp))
min_break = min(min(dtd_exo$delta_pp), min(dtd_endo$delta_pp))
break_lim = round(0.8*min(abs(max_break),abs(min_break)),0)
map_limits = c(-break_lim,break_lim)
map_breaks = round(seq(from = -break_lim, to = break_lim, length.out = 7),0)
if(final_spec=='y'){
map_limits = c(-12,12)
map_breaks = c(-12,-8,-2.7,0,2.7,8,12)}
figure_exo = ggplot()+
geom_sf(data=dtd_exo, aes(fill=as.vector(delta_pp)), linewidth =  0.025, color="black") +
scale_fill_fermenter(palette = "RdBu", direction = -1, na.value = "white", breaks=map_breaks, limits=map_limits) +
theme_void() +
labs(subtitle='With exogenous amenities', fill='pp change in rent ') +
theme(legend.position = "right",  legend.direction = "vertical",
legend.text = element_text(size= 12),
legend.title = element_blank(),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(0.6,"cm"),
plot.subtitle = element_text(size = 14),
text=element_text(family="Palatino"))
figure_endo = ggplot()+
geom_sf(data=dtd_endo, aes(fill=as.vector(delta_pp)), linewidth =  0.025, color="black") +
scale_fill_fermenter(palette = "RdBu", direction = -1, na.value = "white", breaks=map_breaks, limits=map_limits) +
theme_void() +
labs(subtitle='With endogenous amenities', fill='pp change in rent ') +
theme(legend.position = "right",  legend.direction = "vertical",
legend.text = element_text(size= 12),
legend.title = element_blank(),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(0.6,"cm"),
plot.subtitle = element_text(size = 14),
text=element_text(family="Palatino"))
figure=ggarrange(figure_exo,figure_endo, nrow = 1, ncol=2, common.legend = TRUE, legend="right")
pdf(paste0(output_folder,"map_rent_effects_pp.pdf"), height = 3, width = 7.5)
print(figure)
dev.off()
###### EFFECTS ACROSS SPACE - POPULATION AND AMENITIES
#No Airbnb vs Airbnb
for(cf in c('no_airbnb','w_airbnb')){
if(cf=='no_airbnb'){
simulation_results_amenities = paste0(spec_folder_eq,'a_endo_no_airbnb.csv')
simulation_results_population = paste0(spec_folder_eq,'DL_endo_no_airbnb.csv')
simulation_results_population_exo = paste0(spec_folder_eq,'DL_exo_no_airbnb.csv')}
if(cf=='w_airbnb'){
simulation_results_amenities = paste0(spec_folder_eq,'a_endo.csv')
simulation_results_population = paste0(spec_folder_eq,'DL_endo.csv')}
#Amenities
df = read.csv(simulation_results_amenities, header = FALSE, col.names = c('a1','a2','a3','a4','a5','a6'))
dfa_level = df
dfa_level$id = as.character(1:22)
df = df %>% mutate(sum = rowSums(across(where(is.numeric))))
df = df %>% mutate_at(vars(a1:a6) , funs(share = ./sum))
df = df %>% select(contains("share"))
df$id = as.character(1:22)
dfa = df
#Population
df = read.csv(simulation_results_population, header = FALSE, col.names = c('t1','t2','t3') )
dfp_level = df
dfp_level$id = as.character(1:22)
df = df %>% mutate(sum = rowSums(across(where(is.numeric))))
df = df %>% mutate_at(vars(t1:t3) , funs(share = ./sum))
df = df %>% select(contains("share"))
df$id = as.character(1:22)
dfp = df
if(cf=='no_airbnb'){
df_na <- melt(setDT(merge(dfa,dfp, by='id')), id.vars = c("id"), variable.name = "variable", value.name = "share")
df_na_level <- melt(setDT(merge(dfa_level,dfp_level, by='id')), id.vars = c("id"), variable.name = "variable", value.name = "level")
df = read.csv(simulation_results_population_exo, header = FALSE, col.names = c('t1','t2','t3') )
df$id = as.character(1:22)
dfp_exo_na <- melt(setDT(df), id.vars = c("id"), variable.name = "variable", value.name = "level.x") }
if(cf=='w_airbnb'){
df_wa <- melt(setDT(merge(dfa,dfp, by='id')), id.vars = c("id"), variable.name = "variable", value.name = "share")
df_wa_level <- melt(setDT(merge(dfa_level,dfp_level, by='id')), id.vars = c("id"), variable.name = "variable", value.name = "level")}
}
###### Change in population shares
df = merge(df_na, df_wa, by=c('id','variable'))
df$delta_share = df$share.y-df$share.x
for(varname in c('t1_share','t2_share','t3_share')){
if(varname=='t1_share'){type_name='Older Families'}
if(varname=='t2_share'){type_name='Singles'}
if(varname=='t3_share'){type_name='Younger Families'}
df_map = df[variable==varname,]
dtd_map = dtd %>% left_join(. , df_map, by=c("id"))
map_limits = c(0,0.5)
map_breaks = round(seq(from = 0, to = 0.5, length.out = 7),1)
if(final_spec=='y'){map_breaks = c(0,0.025,0.05,0.1,0.2,0.3,0.5)}
figure_baseline = ggplot()+
geom_sf(data=dtd_map, aes(fill=as.vector(share.x)), linewidth =  0.025, color="black") +
scale_fill_fermenter(palette = "Reds", direction = 1, na.value = "white",breaks=map_breaks, limits = map_limits) +
theme_void() +
labs(title = paste0(type_name) , fill='') +
theme(legend.position = "right",  legend.direction = "vertical",
legend.text = element_text(size= 12),
legend.key.size = unit(0.9, "cm"),
legend.key.width = unit(0.6,"cm"),
plot.title = element_text(size = 14, hjust=0.1, vjust=0),
text=element_text(family="Palatino"))
map_limits = c(-1,1)
map_breaks=c(-.06,-.04,-.03,-0.01,0,0.01,.03,.04,.06)
figure_change = ggplot()+
geom_sf(data=dtd_map, aes(fill=as.vector(delta_share)), linewidth =  0.025, color="black") +
scale_fill_fermenter(palette = "RdBu", direction = -1, na.value = "white", breaks=map_breaks, limits = map_limits) +
theme_void() +
labs(title = paste0(type_name) , fill='') +
theme(legend.position = "right",  legend.direction = "vertical",
legend.text = element_text(size= 12),
legend.key.size = unit(0.9, "cm"),
legend.key.width = unit(0.6,"cm"),
plot.title = element_text(size = 14, hjust=0.1, vjust=0),
text=element_text(family="Palatino"))
if(varname=='t1_share'){
figure_baseline_t1=figure_baseline
figure_change_t1=figure_change}
if(varname=='t2_share'){
figure_baseline_t2=figure_baseline
figure_change_t2=figure_change}
if(varname=='t3_share'){
figure_baseline_t3=figure_baseline
figure_change_t3=figure_change}
}
figure_baseline = ggarrange(figure_baseline_t1,figure_baseline_t2,figure_baseline_t3, nrow=1, ncol=3, common.legend = TRUE, legend="right")
pdf(paste0(output_folder,"map_pop_baseline_share.pdf"), width = 8.5, height = 2.5)
print(figure_baseline)
dev.off()
figure_change = ggarrange(figure_change_t1,figure_change_t2,figure_change_t3, nrow=1, ncol=3, common.legend = TRUE, legend="right")
pdf(paste0(output_folder,"map_pop_effects_share.pdf"),  width = 8.5, height = 2.5)
print(figure_change)
dev.off()
###### Change in population pp
df = merge(df_na_level, df_wa_level, by=c('id','variable'))
df$delta_level = 100*(df$level.y-df$level.x)/df$level.x
break_lim = max(abs(quantile(df$delta_level,0.1)), abs(quantile(df$delta_level,0.9)))
map_limits = c(-break_lim,break_lim)
map_breaks = round(seq(from = -break_lim, to = break_lim, length.out = 7),0)
for(varname in c('t1','t2','t3')){
if(varname=='t1'){type_name='Older Families'}
if(varname=='t2'){type_name='Singles'}
if(varname=='t3'){type_name='Younger Families'}
df_map = df[variable==varname,]
dtd_map = dtd %>% left_join(. , df_map, by=c("id"))
if(final_spec=='y'){
map_limits = c(-30,30)
map_breaks = c(-30,-25,-10,0,10,25,30)}
figure_change = ggplot()+
geom_sf(data=dtd_map, aes(fill=as.vector(delta_level)), linewidth =  0.025, color="black") +
scale_fill_fermenter(palette = "RdBu", direction = -1, na.value = "white", breaks=map_breaks, limits = map_limits) +
theme_void() +
labs(title = paste0(type_name) , fill='') +
theme(legend.position = "right",  legend.direction = "vertical",
legend.text = element_text(size= 12),
legend.key.size = unit(0.9, "cm"),
legend.key.width = unit(0.6,"cm"),
plot.title = element_text(size = 14, hjust=0.1, vjust=0),
text=element_text(family="Palatino"))
if(varname=='t1'){figure_change_t1=figure_change}
if(varname=='t2'){figure_change_t2=figure_change}
if(varname=='t3'){figure_change_t3=figure_change}
}
figure_change = ggarrange(figure_change_t1,figure_change_t2,figure_change_t3, nrow=1, ncol=3, common.legend = TRUE, legend="right")
pdf(paste0(output_folder,"map_pop_effects_pp.pdf"),  width = 8.5, height = 2.5)
print(figure_change)
dev.off()
###### Change in amenity shares
df = merge(df_na, df_wa, by=c('id','variable'))
df$delta_share = df$share.y-df$share.x
break_lim = max(abs(quantile(df$delta_share,0.1)), abs(quantile(df$delta_share,0.9)))
map_limits = c(-break_lim,break_lim)
map_breaks = round(seq(from = -break_lim, to = break_lim, length.out = 7),3)
for(varname in c('a1_share','a2_share','a3_share','a4_share','a5_share','a6_share')){
if(varname=='a1_share'){type_name='Touristic Amenities'}
if(varname=='a2_share'){type_name='Restaurants'}
if(varname=='a3_share'){type_name='Bars'}
if(varname=='a4_share'){type_name='Food Stores'}
if(varname=='a5_share'){type_name='Non-food Stores'}
if(varname=='a6_share'){type_name='Nurseries'}
df_map = df[variable==varname,]
dtd_map = dtd %>% left_join(. , df_map, by=c("id"))
#if(final_spec=='y'){
#  map_limits=c(-1,1)
#  map_breaks=c(-.06,-.04,-.03,-0.01,0,0.01,.03,.04,.06)}
figure_change = ggplot()+
geom_sf(data=dtd_map, aes(fill=as.vector(delta_share)), linewidth =  0.025, color="black") +
scale_fill_fermenter(palette = "RdBu", direction = -1, na.value = "white", breaks=map_breaks, limits = map_limits) +
theme_void() +
labs(title = paste0(type_name)  , fill='') +
theme(legend.position = "right",  legend.direction = "vertical",
legend.text = element_text(size= 12),
legend.key.size = unit(1.25,"cm"),
legend.key.width = unit(0.5,"cm"),
legend.title = element_blank(),
plot.title = element_text(size = 14, hjust=0),
text=element_text(family="Palatino"))
if(varname=='a1_share'){
figure_baseline_a1=figure_baseline
figure_change_a1=figure_change}
if(varname=='a2_share'){
figure_baseline_a2=figure_baseline
figure_change_a2=figure_change}
if(varname=='a3_share'){
figure_baseline_a3=figure_baseline
figure_change_a3=figure_change}
if(varname=='a4_share'){
figure_baseline_a4=figure_baseline
figure_change_a4=figure_change}
if(varname=='a5_share'){
figure_baseline_a5=figure_baseline
figure_change_a5=figure_change}
if(varname=='a6_share'){
figure_baseline_a6=figure_baseline
figure_change_a6=figure_change}
}
figure = ggarrange(figure_change_a1,figure_change_a2,figure_change_a3,
figure_change_a4,figure_change_a5,figure_change_a6,
nrow=2, ncol=3, common.legend = TRUE, legend="right")
pdf(paste0(output_folder,"map_amenity_effects_share.pdf"), width = 8.25, height = 4.5)
print(figure)
dev.off()
###### Change in amenities pp
df = merge(df_na_level, df_wa_level, by=c('id','variable'))
df$delta_level = 100*(df$level.y-df$level.x)/df$level.x
library(pacman)
pacman::p_load(rstudioapi, tidyverse, broom, data.table,
readstata13, readxl, openxlsx,
lubridate,
sf,
hrbrthemes, viridis, RColorBrewer,ggplot2,latex2exp,ggpubr,ggpmisc,ggpattern,
latex2exp,extrafont,kableExtra, colorspace)
setwd(dirname(getActiveDocumentContext()$path))
#### Choose specifications
#### Choose specifications
spec_list = c('152')
bootstrap_options =  c('y')
spec_folders = c(paste0('../../../data/simulation_results/python/centroid_full_results/'), paste0('../../../data/simulation_results/julia/new_estimates_new_model/'))
#### Choose final specification
final_spec = 'y'
spec_final = '152'
bootstrap_final = 'y'
for (spec_folder in spec_folders){
for(bootstrap in bootstrap_options){
for(spec in spec_list ){
if(bootstrap=='y'){
spec_gamma = paste0('B_',spec)
}else{
spec_gamma = spec }
spec_folder_eq = paste0(spec_folder,'gamma_',spec_gamma,'/equilibrium_objects/')
spec_folder_cf = paste0(spec_folder,'gamma_',spec_gamma,'/counterfactuals/')
if(final_spec=='y' & bootstrap==bootstrap_final & spec==spec_final){
output_folder = paste0('../../../output/figures/counterfactual_airbnb_entry/')
}else{
output_folder = paste0(spec_folder,'gamma_',spec_gamma,'/figures/counterfactual_airbnb_entry/')
}
dtd = sf::read_sf("../../../data/shapefiles/gebied.shp")
dtd$id = dtd$gd_code
}
}
}
df = merge(df_na_level, df_wa_level, by=c('id','variable'))
#No Airbnb vs Airbnb
for(cf in c('no_airbnb','w_airbnb')){
if(cf=='no_airbnb'){
simulation_results_amenities = paste0(spec_folder_eq,'a_endo_no_airbnb.csv')
simulation_results_population = paste0(spec_folder_eq,'DL_endo_no_airbnb.csv')
simulation_results_population_exo = paste0(spec_folder_eq,'DL_exo_no_airbnb.csv')}
if(cf=='w_airbnb'){
simulation_results_amenities = paste0(spec_folder_eq,'a_endo.csv')
simulation_results_population = paste0(spec_folder_eq,'DL_endo.csv')}
#Amenities
df = read.csv(simulation_results_amenities, header = FALSE, col.names = c('a1','a2','a3','a4','a5','a6'))
dfa_level = df
dfa_level$id = as.character(1:22)
df = df %>% mutate(sum = rowSums(across(where(is.numeric))))
df = df %>% mutate_at(vars(a1:a6) , funs(share = ./sum))
df = df %>% select(contains("share"))
df$id = as.character(1:22)
dfa = df
#Population
df = read.csv(simulation_results_population, header = FALSE, col.names = c('t1','t2','t3') )
dfp_level = df
dfp_level$id = as.character(1:22)
df = df %>% mutate(sum = rowSums(across(where(is.numeric))))
df = df %>% mutate_at(vars(t1:t3) , funs(share = ./sum))
df = df %>% select(contains("share"))
df$id = as.character(1:22)
dfp = df
if(cf=='no_airbnb'){
df_na <- melt(setDT(merge(dfa,dfp, by='id')), id.vars = c("id"), variable.name = "variable", value.name = "share")
df_na_level <- melt(setDT(merge(dfa_level,dfp_level, by='id')), id.vars = c("id"), variable.name = "variable", value.name = "level")
df = read.csv(simulation_results_population_exo, header = FALSE, col.names = c('t1','t2','t3') )
df$id = as.character(1:22)
dfp_exo_na <- melt(setDT(df), id.vars = c("id"), variable.name = "variable", value.name = "level.x") }
if(cf=='w_airbnb'){
df_wa <- melt(setDT(merge(dfa,dfp, by='id')), id.vars = c("id"), variable.name = "variable", value.name = "share")
df_wa_level <- melt(setDT(merge(dfa_level,dfp_level, by='id')), id.vars = c("id"), variable.name = "variable", value.name = "level")}
}
df = merge(df_na_level, df_wa_level, by=c('id','variable'))
df$delta_level = 100*(df$level.y-df$level.x)/df$level.x
View(df)
View(df)
write.csv(df,"~/Downloads/map_amenity_effects_pp_data.csv", row.names = FALSE)
df = merge(df_na, df_wa, by=c('id','variable'))
df$delta_share = df$share.y-df$share.x
View(df)
write.csv(df,"~/Downloads/map_pop_baseline_share_data.csv", row.names = FALSE)
df = merge(df_na_level, df_wa_level, by=c('id','variable'))
df$delta_level = 100*(df$level.y-df$level.x)/df$level.x
View(df)
View(df)
